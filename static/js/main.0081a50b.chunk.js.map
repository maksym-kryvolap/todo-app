{"version":3,"sources":["hooks/LocalStorage.tsx","context/TodoProvider.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoApp/TodoApp.tsx","App.tsx","index.tsx"],"names":["useLocalStorage","key","useState","JSON","parse","localStorage","getItem","value","setValue","item","setItem","stringify","TodoContext","createContext","TodoProvider","children","todosOriginal","setTodosOriginal","todos","setTodos","statusTodo","setStatus","all","setAll","active","setActive","completedTodo","setCompletedTodo","checkCompleted","element","newTodos","forEach","el","id","title","completed","push","deleteTodo","length","undefined","elem","changeTitle","todoId","titleText","changeTodo","tod","statusTodosHandler","filter","ele","Provider","useTodo","useContext","TodoItem","todo","updateId","updateIdHandler","tittleText","setTitleText","ref","useRef","handleFocus","current","focus","useEffect","className","classNames","editing","type","onChange","checked","onDoubleClick","data-cy","onClick","event","target","onKeyUp","onBlur","TodoList","setUpdateId","map","TodoFilter","changeStatus","currentTarget","textContent","href","selected","TodoApp","query","setQuery","activeCount","setActiveCount","allCompletedTodo","setAllCompletedTodo","countActiveTodo","onSubmit","text","preventDefault","deal","Date","addTodo","placeholder","htmlFor","activeTodo","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0081a50b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Todo } from '../types/Todo/Todo';\n\nexport const useLocalStorage = (\n  key: string,\n) => {\n  const [value, setValue] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(key) || '');\n    } catch {\n      return [];\n    }\n  });\n\n  const save = (item: Todo[] | undefined) => {\n    setValue(item);\n    localStorage.setItem(key, JSON.stringify(item));\n  };\n\n  return [value, save];\n};\n","import { createContext, useContext, useState } from 'react';\nimport { Todo } from '../types/Todo/Todo';\n\nimport { useLocalStorage } from '../hooks/LocalStorage';\n\ninterface ITodoContext {\n  todosOriginal: Todo[] | undefined,\n  setTodosOriginal: (value: Todo[] | undefined) => void,\n  todos: Todo[] | undefined,\n  setTodos: (value: Todo[] | undefined) => void,\n  checkCompleted: (element: Todo) => void,\n  deleteTodo: (element: Todo) => void,\n  changeTitle: (todoId: number, titleText: string) => void,\n  statusTodo: string,\n  setStatus: (value: string) => void,\n  statusTodosHandler: (value: string) => void,\n  all: boolean,\n  setAll: (value: boolean) => void,\n  active: boolean,\n  setActive: (value: boolean) => void,\n  completedTodo: boolean,\n  setCompletedTodo: (value: boolean) => void,\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst TodoContext = createContext<ITodoContext>(null!);\n\nexport function TodoProvider({ children }: { children: React.ReactNode }) {\n  const [todosOriginal, setTodosOriginal]\n    = useLocalStorage('todosOriginal');\n  const [todos, setTodos] = useLocalStorage('todos');\n  const [statusTodo, setStatus] = useState('All');\n  const [all, setAll] = useState(true);\n  const [active, setActive] = useState(false);\n  const [completedTodo, setCompletedTodo] = useState(false);\n\n  const checkCompleted = (element: Todo) => {\n    const newTodos: Todo[] | undefined = [];\n\n    todosOriginal?.forEach((el: Todo) => {\n      const { id, title, completed } = el;\n\n      if (id === element.id) {\n        newTodos.push({ id, title, completed: !completed });\n      } else {\n        newTodos.push({ id, title, completed });\n      }\n    });\n\n    setTodosOriginal(newTodos);\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = (element: Todo) => {\n    if (todosOriginal?.length === 1) {\n      setTodosOriginal(undefined);\n      setTodos(undefined);\n    } else {\n      const newTodos: Todo[] = [];\n\n      todosOriginal?.forEach((elem: Todo) => {\n        if (elem.title !== element.title) {\n          newTodos.push(elem);\n        }\n      });\n\n      setTodosOriginal(newTodos);\n      setTodos(newTodos);\n    }\n  };\n\n  const changeTitle = (todoId: number, titleText: string) => {\n    const changeTodo: Todo[] | undefined = [];\n\n    todosOriginal?.forEach((tod: Todo) => {\n      const { id, title, completed } = tod;\n\n      if (id === todoId) {\n        if (titleText.length) {\n          changeTodo.push({ id, title: titleText, completed });\n        }\n      } else if (id !== todoId) {\n        changeTodo.push({ id, title, completed });\n      }\n    });\n\n    setTodosOriginal(changeTodo);\n    setTodos(changeTodo);\n  };\n\n  const statusTodosHandler = (value: string) => {\n    let newTodos: Todo[] | undefined = [];\n\n    switch (value) {\n      case 'Active':\n        newTodos = todosOriginal?.filter((ele: Todo) => !ele.completed);\n        setAll(false);\n        setActive(true);\n        setCompletedTodo(false);\n        setTodos(newTodos);\n\n        return;\n      case 'Completed':\n        newTodos = todosOriginal?.filter((ele: Todo) => ele.completed);\n        setAll(false);\n        setActive(false);\n        setCompletedTodo(true);\n        setTodos(newTodos);\n\n        return;\n      default:\n        setAll(true);\n        setActive(false);\n        setCompletedTodo(false);\n        setTodos(todosOriginal);\n    }\n  };\n\n  const value = {\n    todosOriginal,\n    setTodosOriginal,\n    todos,\n    setTodos,\n    checkCompleted,\n    deleteTodo,\n    changeTitle,\n    statusTodo,\n    setStatus,\n    statusTodosHandler,\n    all,\n    setAll,\n    active,\n    setActive,\n    completedTodo,\n    setCompletedTodo,\n  };\n\n  return (\n    // eslint-disable-next-line react/react-in-jsx-scope\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n}\n\nexport function useTodo() {\n  return useContext(TodoContext);\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport classNames from 'classnames';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useTodo } from '../../context/TodoProvider';\nimport { Todo } from '../../types/Todo/Todo';\n\ntype Props = {\n  todo: Todo,\n  updateId: number | null,\n  updateIdHandler: (value: number | null) => void,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  updateId,\n  updateIdHandler,\n}) => {\n  const {\n    checkCompleted,\n    deleteTodo,\n    changeTitle,\n    todosOriginal,\n    statusTodo,\n    statusTodosHandler,\n  } = useTodo();\n\n  const { id, title, completed } = todo;\n\n  const [tittleText, setTitleText] = useState(title);\n\n  const changeTitleHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      changeTitle(id, tittleText);\n      updateIdHandler(null);\n    } else if (event.key === 'Escape') {\n      updateIdHandler(null);\n      setTitleText(title);\n    }\n  };\n\n  const ref = useRef<HTMLInputElement | null>(null);\n\n  const handleFocus = () => {\n    if (ref.current) {\n      ref.current.focus();\n    }\n  };\n\n  useEffect(() => {\n    statusTodosHandler(statusTodo);\n  }, [todosOriginal]);\n\n  useEffect(() => {\n    handleFocus();\n  });\n\n  return (\n    <li\n      className={classNames({ completed, editing: updateId === id })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          onChange={() => {\n            checkCompleted(todo);\n          }}\n          checked={completed}\n        />\n        <label\n          onDoubleClick={() => {\n            updateIdHandler(id);\n            handleFocus();\n          }}\n        >\n          {title}\n        </label>\n\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          data-cy=\"deleteTodo\"\n          onClick={() => deleteTodo(todo)}\n        />\n      </div>\n\n      {(updateId === id) && (\n        <input\n          type=\"text\"\n          ref={ref}\n          className=\"edit\"\n          value={tittleText}\n          onChange={(event) => setTitleText(event.target.value)}\n          onKeyUp={changeTitleHandler}\n          onBlur={(event) => {\n            updateIdHandler(null);\n            changeTitle(id, event.target.value);\n          }}\n        />\n      )}\n    </li>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const [updateId, setUpdateId] = useState<number | null>(null);\n\n  const updateIdHandler = (value: number | null) => {\n    setUpdateId(value);\n  };\n\n  return (\n    <ul className=\"todo-list\" data-cy=\"todoList\">\n      {todos && todos.map((todo: Todo) => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n          updateId={updateId}\n          updateIdHandler={updateIdHandler}\n        />\n      ))}\n    </ul>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useEffect } from 'react';\nimport { useTodo } from '../../context/TodoProvider';\n\ntype Props = {\n  all: boolean;\n  active: boolean;\n  completedTodo: boolean;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  all,\n  active,\n  completedTodo,\n}) => {\n  const { setStatus, statusTodo, statusTodosHandler } = useTodo();\n\n  useEffect(() => {\n    statusTodosHandler(statusTodo);\n  }, [statusTodo]);\n\n  const changeStatus = (\n    event: React.MouseEvent<HTMLAnchorElement>,\n  ) => {\n    if (event.currentTarget.textContent) {\n      setStatus(event.currentTarget.textContent);\n    }\n  };\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={classNames({ selected: all })}\n          onClick={changeStatus}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={classNames({ selected: active })}\n          onClick={changeStatus}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={classNames({ selected: completedTodo })}\n          onClick={changeStatus}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\n\nimport { TodoList } from '../TodoList/TodoList';\nimport { TodoFilter } from '../TodoFilter/TodoFilter';\nimport { Todo } from '../../types/Todo/Todo';\nimport { useTodo } from '../../context/TodoProvider';\n\nexport const TodoApp: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [activeCount, setActiveCount] = useState(0);\n  const [allCompletedTodo, setAllCompletedTodo] = useState(false);\n\n  const {\n    todosOriginal,\n    setTodosOriginal,\n    todos,\n    setTodos,\n    all,\n    active,\n    completedTodo,\n  } = useTodo();\n\n  useEffect(() => {\n    if (todosOriginal) {\n      const countActiveTodo\n        = todosOriginal.filter(todo => !todo.completed).length;\n\n      setAllCompletedTodo(!activeCount);\n\n      setActiveCount(countActiveTodo);\n    } else {\n      setActiveCount(0);\n      setAllCompletedTodo(false);\n    }\n  });\n\n  const addTodo = (\n    event: React.FormEvent<HTMLFormElement>,\n    text: string,\n  ) => {\n    event.preventDefault();\n\n    if (text.length) {\n      const deal = {\n        id: +new Date(),\n        title: text,\n        completed: false,\n      };\n\n      if (todosOriginal) {\n        setTodosOriginal([...todosOriginal, deal]);\n        setTodos([...todosOriginal, deal]);\n      } else {\n        setTodosOriginal([deal]);\n        setTodos([deal]);\n      }\n\n      setQuery('');\n    }\n  };\n\n  const deleteCompleted = () => {\n    const activeTodo: Todo[] = [];\n\n    todosOriginal?.forEach(element => {\n      if (!element.completed) {\n        activeTodo.push(element);\n      }\n    });\n\n    setAllCompletedTodo(false);\n    setTodosOriginal(activeTodo);\n    setTodos(activeTodo);\n  };\n\n  const toggleAllHandler = () => {\n    const newTodos: Todo[] | undefined = [];\n\n    todosOriginal?.forEach(el => {\n      const { id, title } = el;\n\n      newTodos.push({ id, title, completed: !allCompletedTodo });\n    });\n\n    setAllCompletedTodo(!allCompletedTodo);\n    setTodosOriginal(newTodos);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form\n          onSubmit={(event) => addTodo(event, query)}\n        >\n          <input\n            type=\"text\"\n            data-cy=\"createTodo\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={query}\n            onChange={(event) => setQuery(event.target.value)}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        {(todosOriginal && !!todosOriginal.length) && (\n          <>\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              data-cy=\"toggleAll\"\n              onChange={toggleAllHandler}\n              checked={allCompletedTodo}\n            />\n            <label htmlFor=\"toggle-all\">\n              Mark all as complete\n            </label>\n          </>\n        )}\n\n        {todos && (\n          <TodoList todos={todos} />\n        )}\n      </section>\n\n      {(todosOriginal && !!todosOriginal.length) && (\n        <footer className=\"footer\">\n          <span className=\"todo-count\" data-cy=\"todosCounter\">\n            {`${activeCount} item${activeCount > 0 ? 's' : ''} left`}\n          </span>\n\n          <TodoFilter\n            all={all}\n            active={active}\n            completedTodo={completedTodo}\n          />\n\n          {activeCount < todosOriginal.length && (\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={deleteCompleted}\n            >\n              Clear completed\n            </button>\n          )}\n        </footer>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp/TodoApp';\nimport { TodoProvider } from './context/TodoProvider';\n\nexport const App: React.FC = () => {\n  return (\n    <TodoProvider>\n      <TodoApp />\n    </TodoProvider>\n  );\n};\n","/* eslint-disable react/react-in-jsx-scope */\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}